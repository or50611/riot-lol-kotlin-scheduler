<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springboot.riot.data.summoner.mapper.SummonerMapper">

	<select id="selectSummonerList" resultType="com.springboot.riot.data.summoner.vo.SummonerInfoVo">
		SELECT
			ACCOUNT_ID
			, TEAM_SEQ
			, ACTIVITY_NM
			, ACTIVITY_KOR_NM
			, USER_NAME
			, LANE
			, ID
			, PUUID
			, NICKNAME
			, PROFILE_ICON_ID
			, REVISION_DATE
			, SUMMONER_LEVEL
			, PROFILE_NM
		FROM SUMMONER_INFO
	</select>
	
	<select id="selectMatchReferenceOne" parameterType="hashMap" resultType="Int">
		SELECT COUNT(*)
		FROM SUMMONER_MATCH_INFO
		WHERE ACCOUNT_ID = #{accountId}
		AND   GAME_ID = #{gameId}
	</select>


	<select id="selectMatchBasicOne" parameterType="hashMap" resultType="Int">
		SELECT COUNT(*)
		FROM MATCH_BASIC
		WHERE GAME_ID = #{gameId}
	</select>

	<select id="selectMatchBasicOneV5" parameterType="hashMap" resultType="Int">
		SELECT COUNT(*)
		FROM MATCH_BASIC_V5
		WHERE MATCH_ID = #{matchId}
	</select>

	<insert id="insertMatchReference" parameterType="com.springboot.riot.data.summoner.dto.MatchReferenceDto">
		INSERT INTO SUMMONER_MATCH_INFO
		(
			ACCOUNT_ID
			, GAME_ID
			, PLATFORM_ID
			, CHAMPION
			, QUEUE
			, SEASON
			, TIME_STAMP
			, ROLE
			, LANE
			, REG_DATE
		) VALUES (
			#{accountId}
			, #{gameId}
			, #{platformId}
			, #{champion}
			, #{queue}
			, #{season}
			, #{timestamp}
			, #{role}
			, #{lane}
			, NOW()
		)
	</insert>

	<insert id="insertMatchBasic" parameterType="com.springboot.riot.data.summoner.dto.MatchDto">
		INSERT INTO MATCH_BASIC
		(
			GAME_ID
			, PLATFORM_ID
			, GAME_CREATION
			, GAME_DURATION
			, QUEUE_ID
			, MAP_ID
			, SEASON_ID
			, GAME_VERSION
			, GAME_MODE
			, GAME_TYPE
			, REG_DATE
		) VALUES (
			#{gameId}
			, #{platformId}
			, #{gameCreation}
			, #{gameDuration}
			, #{queueId}
			, #{mapId}
			, #{seasonId}
			, #{gameVersion}
			, #{gameMode}
			, #{gameType}
			, NOW()
		)
	</insert>

	<insert id="insertMatchTeamStats" parameterType="com.springboot.riot.data.summoner.dto.MatchTeamStatsDto">
		INSERT INTO MATCH_TEAM
		(
			GAME_ID
			, TEAM_ID
			, WIN
			, FIRST_BLOOD
			, FIRST_TOWER
			, FIRST_INHIBITOR
			, FIRST_BARON
			, FIRST_DRAGON
			, FIRST_RIFT_HERALD
			, TOWER_KILLS
			, INHIBITOR_KILLS
			, BARON_KILLS
			, VILEMAW_KILLS
			, RIFT_HERALD_KILLS
			, DOMINION_VICTORY_SCORE
			, REG_DATE
		) VALUES (
			#{gameId}
			, #{teamId}
			, #{win}
			, #{firstBlood}
			, #{firstTower}
			, #{firstInhibitor}
			, #{firstBaron}
			, #{firstDragon}
			, #{firstRiftHerald}
			, #{towerKills}
			, #{inhibitorKills}
			, #{baronKills}
			, #{vilemawKills}
			, #{riftHeraldKills}
			, #{dominionVictoryScore}
			, NOW()
		)
	</insert>

	<insert id="insertMatchTeamBans" parameterType="com.springboot.riot.data.summoner.dto.MatchTeamBansDto">
		INSERT INTO MATCH_TEAM_BAN
		(
			GAME_ID
			, TEAM_ID
			, CHAMPION_ID
			, PICK_TURN
			, REG_DATE
		) VALUES (
			#{gameId}
			, #{teamId}
			, #{championId}
			, #{pickTurn}
			, NOW()
		)
	</insert>

	<insert id="insertMatchParticipant" parameterType="com.springboot.riot.data.summoner.dto.MatchParticipantDto">
		INSERT INTO MATCH_PARTICIPANT_BASIC
		(
			GAME_ID
			, PARTICIPANT_ID
			, TEAM_ID
			, CHAMPION_ID
			, SPELL1_ID
			, SPELL2_ID
			, REG_DATE
		) VALUES (
			#{gameId}
			, #{participantId}
			, #{teamId}
			, #{championId}
			, #{spell1Id}
			, #{spell2Id}
			, NOW()
		)
	</insert>

	<insert id="insertMatchParticipantStats" parameterType="com.springboot.riot.data.summoner.dto.MatchParticipantStatsDto">
		INSERT INTO MATCH_PARTICIPANT_STATS
		(
			GAME_ID
			, PARTICIPANT_ID
			, WIN
			, ITEM_0
			, ITEM_1
			, ITEM_2
			, ITEM_3
			, ITEM_4
			, ITEM_5
			, ITEM_6
			, KILLS
			, DEATHS
			, ASSISTS
			, LARGEST_KILLING_SPREE
			, LARGEST_MULTI_KILL
			, KILLING_SPREES
			, LONGEST_TIME_SPENT_LIVING
			, DOUBLE_KILLS
			, TRIPLE_KILLS
			, QUADRA_KILLS
			, PENTA_KILLS
			, UNREAL_KILLS
			, TOTAL_DAMAGE_DEALT
			, MAGIC_DAMAGE_DEALT
			, PHYSICAL_DAMAGE_DEALT
			, TRUE_DAMAGE_DEALT
			, LARGEST_CRITICAL_STRIKE
			, TOTAL_DAMAGE_DEALT_TO_CHAMPIONS
			, MAGIC_DAMAGE_DEALT_TO_CHAMPIONS
			, PHYSICAL_DAMAGE_DEALT_TO_CHAMPIONS
			, TRUE_DAMAGE_DEALT_TO_CHAMPIONS
			, TOTAL_HEAL
			, TOTAL_UNITS_HEALED
			, DAMAGE_SELF_MITIGATED
			, DAMAGE_DEALT_TO_OBJECTIVES
			, DAMAGE_DEALT_TO_TURRETS
			, VISION_SCORE
			, TIME_CCING_OTHERS
			, TOTAL_DAMAGE_TAKEN
			, MAGIC_DAMAGE_TAKEN
			, PHYSICAL_DAMAGE_TAKEN
			, TRUE_DAMAGE_TAKEN
			, GOLD_EARNED
			, GOLD_SPENT
			, TURRET_KILLS
			, INHIBITOR_KILLS
			, TOTAL_MINIONS_KILLED
			, NEUTRAL_MINIONS_KILLED
			, NEUTRAL_MINIONS_KILLED_TEAM_JUNGLE
			, NEUTRAL_MINIONS_KILLED_ENEMY_JUNGLE
			, TOTAL_TIME_CROWD_CONTROL_DEALT
			, CHAMP_LEVEL
			, VISION_WARDS_BOUGHT_INGAME
			, SIGHT_WARDS_BOUGHT_INGAME
			, WARDS_PLACED
			, WARDS_KILLED
			, FIRST_BLOOD_KILL
			, FIRST_BLOOD_ASSIST
			, FIRST_TOWER_KILL
			, FIRST_TOWER_ASSIST
			, FIRST_INHIBITOR_KILL
			, FIRST_INHIBITOR_ASSIST
			, COMBAT_PLAYER_SCORE
			, OBJECTIVE_PLAYER_SCORE
			, TOTAL_PLAYER_SCORE
			, TOTAL_SCORE_RANK
			, PLAYER_SCORE_0
			, PLAYER_SCORE_1
			, PLAYER_SCORE_2
			, PLAYER_SCORE_3
			, PLAYER_SCORE_4
			, PLAYER_SCORE_5
			, PLAYER_SCORE_6
			, PLAYER_SCORE_7
			, PLAYER_SCORE_8
			, PLAYER_SCORE_9
			, PERK_0
			, PERK_0_VAL_1
			, PERK_0_VAL_2
			, PERK_0_VAL_3
			, PERK_1
			, PERK_1_VAL_1
			, PERK_1_VAL_2
			, PERK_1_VAL_3
			, PERK_2
			, PERK_2_VAL_1
			, PERK_2_VAL_2
			, PERK_2_VAL_3
			, PERK_3
			, PERK_3_VAL_1
			, PERK_3_VAL_2
			, PERK_3_VAL_3
			, PERK_4
			, PERK_4_VAL_1
			, PERK_4_VAL_2
			, PERK_4_VAL_3
			, PERK_5
			, PERK_5_VAL_1
			, PERK_5_VAL_2
			, PERK_5_VAL_3
			, PERK_PRIMARY_STYLE
			, PERK_SUB_STYLE
			, STAT_PERK_0
			, STAT_PERK_1
			, STAT_PERK_2
			, REG_DATE
		) VALUES (
			#{gameId}
			, #{participantId}
			, #{win}
			, #{item0}
			, #{item1}
			, #{item2}
			, #{item3}
			, #{item4}
			, #{item5}
			, #{item6}
			, #{kills}
			, #{deaths}
			, #{assists}
			, #{largestKillingSpree}
			, #{largestMultiKill}
			, #{killingSprees}
			, #{longestTimeSpentLiving}
			, #{doubleKills}
			, #{tripleKills}
			, #{quadraKills}
			, #{pentaKills}
			, #{unrealKills}
			, #{totalDamageDealt}
			, #{magicDamageDealt}
			, #{physicalDamageDealt}
			, #{trueDamageDealt}
			, #{largestCriticalStrike}
			, #{totalDamageDealtToChampions}
			, #{magicDamageDealtToChampions}
			, #{physicalDamageDealtToChampions}
			, #{trueDamageDealtToChampions}
			, #{totalHeal}
			, #{totalUnitsHealed}
			, #{damageSelfMitigated}
			, #{damageDealtToObjectives}
			, #{damageDealtToTurrets}
			, #{visionScore}
			, #{timeCCingOthers}
			, #{totalDamageTaken}
			, #{magicalDamageTaken}
			, #{physicalDamageTaken}
			, #{trueDamageTaken}
			, #{goldEarned}
			, #{goldSpent}
			, #{turretKills}
			, #{inhibitorKills}
			, #{totalMinionsKilled}
			, #{neutralMinionsKilled}
			, #{neutralMinionsKilledTeamJungle}
			, #{neutralMinionsKilledEnemyJungle}
			, #{totalTimeCrowdControlDealt}
			, #{champLevel}
			, #{visionWardsBoughtInGame}
			, #{sightWardsBoughtInGame}
			, #{wardsPlaced}
			, #{wardsKilled}
			, #{firstBloodKill}
			, #{firstBloodAssist}
			, #{firstTowerKill}
			, #{firstTowerAssist}
			, #{firstInhibitorKill}
			, #{firstInhibitorAssist}
			, #{combatPlayerScore}
			, #{objectivePlayerScore}
			, #{totalPlayerScore}
			, #{totalScoreRank}
			, #{playerScore0}
			, #{playerScore1}
			, #{playerScore2}
			, #{playerScore3}
			, #{playerScore4}
			, #{playerScore5}
			, #{playerScore6}
			, #{playerScore7}
			, #{playerScore8}
			, #{playerScore9}
			, #{perk0}
			, #{perk0Var1}
			, #{perk0Var2}
			, #{perk0Var3}
			, #{perk1}
			, #{perk1Var1}
			, #{perk1Var2}
			, #{perk1Var3}
			, #{perk2}
			, #{perk2Var1}
			, #{perk2Var2}
			, #{perk2Var3}
			, #{perk3}
			, #{perk3Var1}
			, #{perk3Var2}
			, #{perk3Var3}
			, #{perk4}
			, #{perk4Var1}
			, #{perk4Var2}
			, #{perk4Var3}
			, #{perk5}
			, #{perk5Var1}
			, #{perk5Var2}
			, #{perk5Var3}
			, #{perkPrimaryStyle}
			, #{perkSubStyle}
			, #{statPerk0}
			, #{statPerk1}
			, #{statPerk2}
			, NOW()
		)
	</insert>

	<insert id="insertMatchParticipantTimeLine" parameterType="com.springboot.riot.data.summoner.dto.MatchParticipantTimeLineDto">
		INSERT INTO MATCH_PARTICIPANT_TIMELINE
		(
			GAME_ID
			, PARTICIPANT_ID
			, ROLE
			, LANE
			, REG_DATE
		) VALUES (
			#{gameId}
			, #{participantId}
			, #{role}
			, #{lane}
			, NOW()
		)
	</insert>

	<insert id="insertMatchParticipantTimeLineDelta" parameterType="hashMap">
		INSERT INTO MATCH_PARTICIPANT_TIMELINE_DELTA
		(
			GAME_ID
			, PARTICIPANT_ID
			, MIN_DELTA
			, MIN_0010
			, MIN_1020
			, REG_DATE
		) VALUES (
			#{gameId}
			, #{participantId}
			, #{minDelta}
			, #{min0010}
			, #{min1020}
			, NOW()
		)
	</insert>

	<insert id="insertMatchParticipantIdentities" parameterType="com.springboot.riot.data.summoner.dto.MatchPlayerDto">
		INSERT INTO MATCH_PARTICIPANT_INFO
		(
			GAME_ID
			, PARTICIPANT_ID
			, PLATFORM_ID
			, TIER
			, RANK
			, ACCOUNT_ID
			, SUMMONER_NAME
			, SUMMONER_ID
			, CURRENT_PLATFORM_ID
			, CURRENT_ACCOUNT_ID
			, MATCH_HISTORY_URI
			, PROFILE_ICON
			, REG_DATE
		) VALUES (
			#{gameId}
			, #{participantId}
			, #{platformId}
			, #{tier}
			, #{rank}
			, #{accountId}
			, #{summonerName}
			, #{summonerId}
			, #{currentPlatformId}
			, #{currentAccountId}
			, #{matchHistoryUri}
			, #{profileIcon}
			, NOW()
		)
	</insert>

	<insert id="insertMatchTimeLineParticipant" parameterType="com.springboot.riot.data.summoner.dto.MatchTimeLineParticipantDto">
		INSERT INTO MATCH_TIMELINE_PARTICIPANT
		(
			GAME_ID
			, PARENT_TIMESTAMP
			, FRAME_ID
			, PARTICIPANT_ID
			, CURRENT_GOLD
			, TOTAL_GOLD
			, LEVEL
			, XP
			, MINIONS_KILLED
			, JUNGLE_MINIONS_KILLED
			, DOMINION_SCORE
			, TEAM_SCORE
			, X
			, Y
			, REG_DATE

		) VALUES (
			#{gameId}
			, #{parentTimestamp}
			, #{frameId}
			, #{participantId}
			, #{currentGold}
			, #{totalGold}
			, #{level}
			, #{xp}
			, #{minionsKilled}
			, #{jungleMinionsKilled}
			, #{dominionScore}
			, #{teamScore}
			, #{x}
			, #{y}
			, NOW()
		)
	</insert>

	<insert id="insertMatchTimeLineEventSkill" parameterType="com.springboot.riot.data.summoner.dto.MatchTimeLineEventDto">
		INSERT INTO MATCH_TIMELINE_EVENT_SKILL
		(
			GAME_ID
			, PARENT_TIMESTAMP
			, TIMESTAMP
			, E_TYPE
			, PARTICIPANT_ID
			, SKILL_SLOT
			, LEVEL_UP_TYPE
			, REG_DATE
		) VALUES (
			#{gameId}
			, #{parentTimestamp}
			, #{timestamp}
			, #{type}
			, #{participantId}
			, #{skillSlot}
			, #{levelUpType}
			, NOW()
		)
	</insert>

	<insert id="insertMatchTimeLineEventItem" parameterType="com.springboot.riot.data.summoner.dto.MatchTimeLineEventDto">
		INSERT INTO MATCH_TIMELINE_EVENT_ITEM
		(
			GAME_ID
			, PARENT_TIMESTAMP
			, TIMESTAMP
			, E_TYPE
			, PARTICIPANT_ID
			, ITEM_ID
			, AFTER_ID
			, BEFORE_ID
			, REG_DATE
		) VALUES (
			#{gameId}
			, #{parentTimestamp}
			, #{timestamp}
			, #{type}
			, #{participantId}
			, #{itemId}
			, #{afterId}
			, #{beforeId}
			, NOW()
		)
	</insert>

	<insert id="insertMatchTimeLineEventChampion" parameterType="com.springboot.riot.data.summoner.dto.MatchTimeLineEventDto">
		INSERT INTO MATCH_TIMELINE_EVENT_CHAMPION
		(
			GAME_ID
			, PARENT_TIMESTAMP
			, TIMESTAMP
			, E_TYPE
			, KILLER_ID
			, VICTIM_ID
			, X
			, Y
			, REG_DATE
		) VALUES (
			#{gameId}
			, #{parentTimestamp}
			, #{timestamp}
			, #{type}
			, #{killerId}
			, #{victimId}
			, #{x}
			, #{y}
			, NOW()
		)
	</insert>

	<insert id="insertMatchTimeLineEventWard" parameterType="com.springboot.riot.data.summoner.dto.MatchTimeLineEventDto">
		INSERT INTO MATCH_TIMELINE_EVENT_WARD
		(
			GAME_ID
			, PARENT_TIMESTAMP
			, TIMESTAMP
			, E_TYPE
			, WARD_TYPE
			, CREATOR_ID
			, KILLER_ID
			, REG_DATE
		) VALUES (
			#{gameId}
			, #{parentTimestamp}
			, #{timestamp}
			, #{type}
			, #{wardType}
			, #{creatorId}
			, #{killerId}
			, NOW()
		)
	</insert>

	<insert id="insertMatchTimeLineEventBuilding" parameterType="com.springboot.riot.data.summoner.dto.MatchTimeLineEventDto">
		INSERT INTO MATCH_TIMELINE_EVENT_BUILDING
		(
			GAME_ID
			, PARENT_TIMESTAMP
			, TIMESTAMP
			, E_TYPE
			, KILLER_ID
			, TEAM_ID
			, BUILDING_TYPE
			, TOWER_TYPE
			, X
			, Y
			, REG_DATE
		) VALUES (
			#{gameId}
			, #{parentTimestamp}
			, #{timestamp}
			, #{type}
			, #{killerId}
			, #{teamId}
			, #{buildingType}
			, #{towerType}
			, #{x}
			, #{y}
			, NOW()
		)
	</insert>

	<insert id="insertMatchTimeLineEventMonster" parameterType="com.springboot.riot.data.summoner.dto.MatchTimeLineEventDto">
		INSERT INTO MATCH_TIMELINE_EVENT_MONSTER
		(
			GAME_ID
			, PARENT_TIMESTAMP
			, TIMESTAMP
			, E_TYPE
			, KILLER_ID
			, MONSTER_TYPE
			, MONSTER_SUB_TYPE
			, X
			, Y
			, REG_DATE
		) VALUES (
			#{gameId}
			, #{parentTimestamp}
			, #{timestamp}
			, #{type}
			, #{killerId}
			, #{monsterType}
			, #{monsterSubType}
			, #{x}
			, #{y}
			, NOW()
		)
	</insert>

	<insert id="insertMatchTimeLineEventPosition" parameterType="com.springboot.riot.data.summoner.dto.MatchTimeLineEventDto">
		INSERT INTO MATCH_TIMELINE_EVENT_POSITION
		(
			GAME_ID
			, PARENT_TIMESTAMP
			, TIMESTAMP
			, X
			, Y
			, REG_DATE
		) VALUES (
			#{gameId}
			, #{parentTimestamp}
			, #{timestamp}
			, #{x}
			, #{y}
			, NOW()
		)
	</insert>

	<insert id="insertMatchTimeLineEventAssist" parameterType="com.springboot.riot.data.summoner.dto.MatchTimeLineEventDto">
		INSERT INTO MATCH_TIMELINE_EVENT_ASSIST
		(
			GAME_ID
			, PARENT_TIMESTAMP
			, TIMESTAMP
			, PARTICIPANT_ID
			, REG_DATE
		) VALUES (
			#{gameId}
			, #{parentTimestamp}
			, #{timestamp}
			, #{participantId}
			, NOW()
		)
	</insert>

	<select id="selectParticipantBasicList" parameterType="Long" resultType="com.springboot.riot.data.summoner.dto.MatchParticipantDto">
		SELECT MP_BASIC.GAME_ID
			, MP_BASIC.PARTICIPANT_ID
			, MP_BASIC.TEAM_ID
			, MP_BASIC.CHAMPION_ID
			, MP_BASIC.SPELL1_ID
			, MP_BASIC.SPELL2_ID
			, MP_INFO.ACCOUNT_ID
		FROM MATCH_PARTICIPANT_BASIC MP_BASIC
		JOIN MATCH_PARTICIPANT_INFO MP_INFO
		ON	 MP_BASIC.GAME_ID = MP_INFO.GAME_ID
		AND MP_BASIC.PARTICIPANT_ID = MP_INFO.PARTICIPANT_ID
		WHERE MP_BASIC.GAME_ID = #{gameId}
		ORDER BY MP_BASIC.PARTICIPANT_ID
	</select>

	<select id="selectParticipantPositionList" parameterType="Long" resultType="com.springboot.riot.data.summoner.dto.MatchTimeLineParticipantDto">
		SELECT *
		FROM MATCH_TIMELINE_PARTICIPANT
		WHERE GAME_ID = #{gameId}
		AND	PARENT_TIMESTAMP > 100000 AND PARENT_TIMESTAMP <![CDATA[<]]> 700000
		ORDER BY PARENT_TIMESTAMP
	</select>

	<select id="selectParticipantItemList" parameterType="Long" resultType="com.springboot.riot.data.summoner.dto.MatchTimeLineEventDto">
		SELECT *
		FROM MATCH_TIMELINE_EVENT_ITEM
		WHERE GAME_ID = #{gameId}
		AND	PARENT_TIMESTAMP <![CDATA[<]]> 100000
		AND	E_TYPE = 'ITEM_PURCHASED'
	</select>

	<update id="updateParticipantLane" parameterType="hashMap">
		UPDATE MATCH_PARTICIPANT_TIMELINE
		SET
		LANE = #{lane}
		, LANE_SEQ = #{laneSeq}
		WHERE GAME_ID = #{gameId}
		AND	  PARTICIPANT_ID = #{participantId}
	</update>

	<update id="updateSummonerMatchLane" parameterType="hashMap">
		UPDATE SUMMONER_MATCH_INFO
		SET
		LANE = #{lane}
		, ENEMY_CHAMPION = #{enemyChampion}
		WHERE GAME_ID = #{gameId}
		AND	  ACCOUNT_ID = #{accountId}
	</update>

	<update id="updateMatchEnemyChampion" parameterType="hashMap">
		UPDATE SUMMONER_MATCH_INFO A,
			(	SELECT M_PB.CHAMPION_ID, M_PT.LANE
				FROM MATCH_PARTICIPANT_BASIC M_PB
				JOIN MATCH_PARTICIPANT_INFO M_PI
				ON   M_PB.GAME_ID = M_PI.GAME_ID
				AND  M_PB.PARTICIPANT_ID = M_PI.PARTICIPANT_ID
				JOIN MATCH_PARTICIPANT_TIMELINE M_PT
				ON   M_PB.GAME_ID = M_PT.GAME_ID
				AND  M_PB.PARTICIPANT_ID = M_PT.PARTICIPANT_ID
				JOIN (	SELECT M_PT.LANE_SEQ
						FROM MATCH_PARTICIPANT_INFO M_PI
						JOIN MATCH_PARTICIPANT_TIMELINE M_PT
						ON   M_PI.GAME_ID = M_PT.GAME_ID
						AND  M_PI.PARTICIPANT_ID = M_PT.PARTICIPANT_ID
						WHERE M_PI.GAME_ID = #{gameId}
						AND  M_PI.ACCOUNT_ID = #{accountId}
				) SUB_1
			ON   M_PT.LANE_SEQ = SUB_1.LANE_SEQ
			WHERE M_PB.GAME_ID = #{gameId}
			AND  M_PI.ACCOUNT_ID != #{accountId}
			) B
		SET
		A.ENEMY_CHAMPION = B.CHAMPION_ID
		, A.LANE = B.LANE
		WHERE A.GAME_ID = #{gameId}
		AND  A.ACCOUNT_ID = #{accountId}
	</update>


	<select id="selectMatchReferenceOneV5" parameterType="com.springboot.riot.data.summoner.dto.v5.SummonerMatchV5Dto" resultType="Int">
		SELECT COUNT(*)
		FROM SUMMONER_MATCH_INFO_V5
		WHERE PUUID = #{puuid}
		AND   MATCH_ID = #{matchId}
	</select>


	<insert id="insertSummonerMatchV5" parameterType="com.springboot.riot.data.summoner.dto.v5.SummonerMatchV5Dto">
		INSERT INTO SUMMONER_MATCH_INFO_V5
		(
			PUUID
			, MATCH_ID
		) VALUES (
			#{puuid}
			, #{matchId}
		)
	</insert>


	<insert id="insertMatchBasicV5" parameterType="com.springboot.riot.data.summoner.dto.v5.MatchInfoV5Dto">
		INSERT INTO MATCH_BASIC_V5
		(
			MATCH_ID
			, GAME_CREATION
			, GAME_DURATION
			, GAME_END_TIMESTAMP
			, GAME_ID
			, GAME_MODE
			, GAME_NAME
			, GAME_START_TIMESTAMP
			, GAME_TYPE
			, GAME_VERSION
			, MAP_ID
			, PLATFORM_ID
			, QUEUE_ID
			, TOURNAMENT_CODE
		) VALUES (
			#{matchId}
			, #{gameCreation}
			, #{gameDuration}
			, #{gameEndTimestamp}
			, #{gameId}
			, #{gameMode}
			, #{gameName}
			, #{gameStartTimestamp}
			, #{gameType}
			, #{gameVersion}
			, #{mapId}
			, #{platformId}
			, #{queueId}
			, #{tournamentCode}
		)
	</insert>


	<insert id="insertMatchInfoParticipantsV5" parameterType="com.springboot.riot.data.summoner.dto.v5.MatchInfoParticipantsV5Dto">
		INSERT INTO MATCH_PARTICIPANT_INFO_V5
		(
			MATCH_ID
			, GAME_ID
			, ASSISTS
			, BARON_KILLS
			, BOUNTY_LEVEL
			, CHAMP_EXPERIENCE
			, CHAMP_LEVEL
			, CHAMPION_ID
			, CHAMPION_NAME
			, CHAMPION_TRANSFORM
			, CONSUMABLES_PURCHASED
			, DAMAGE_DEALT_TO_BUILDINGS
			, DAMAGE_DEALT_TO_OBJECTIVES
			, DAMAGE_DEALT_TO_TURRETS
			, DAMAGE_SELF_MITIGATED
			, DEATHS
			, DETECTOR_WARDS_PLACED
			, DOUBLE_KILLS
			, DRAGON_KILLS
			, ELIGIBLE_FOR_PROGRESSION
			, FIRST_BLOOD_ASSIST
			, FIRST_BLOOD_KILL
			, FIRST_TOWER_ASSIST
			, FIRST_TOWER_KILL
			, GAME_ENDED_IN_EARLY_SURRENDER
			, GAME_ENDED_IN_SURRENDER
			, GOLD_EARNED
			, GOLD_SPENT
			, INDIVIDUAL_POSITION
			, INHIBITOR_KILLS
			, INHIBITOR_TAKEDOWNS
			, INHIBITORS_LOST
			, ITEM0
			, ITEM1
			, ITEM2
			, ITEM3
			, ITEM4
			, ITEM5
			, ITEM6
			, ITEMS_PURCHASED
			, KILLING_SPREES
			, KILLS
			, LANE
			, LARGEST_CRITICAL_STRIKE
			, LARGEST_KILLING_SPREE
			, LARGEST_MULTI_KILL
			, LONGEST_TIME_SPENT_LIVING
			, MAGIC_DAMAGE_DEALT
			, MAGIC_DAMAGE_DEALT_TO_CHAMPIONS
			, MAGIC_DAMAGE_TAKEN
			, NEUTRAL_MINIONS_KILLED
			, NEXUS_KILLS
			, NEXUS_LOST
			, NEXUS_TAKEDOWNS
			, OBJECTIVES_STOLEN
			, OBJECTIVES_STOLEN_ASSISTS
			, PARTICIPANT_ID
			, PENTA_KILLS
			, PHYSICAL_DAMAGE_DEALT
			, PHYSICAL_DAMAGE_DEALT_TO_CHAMPIONS
			, PHYSICAL_DAMAGE_TAKEN
			, PROFILE_ICON
			, PUUID
			, QUADRA_KILLS
			, RIOT_ID_NAME
			, RIOT_ID_TAGLINE
			, ROLE
			, SIGHT_WARDS_BOUGHT_IN_GAME
			, SPELL1_CASTS
			, SPELL2_CASTS
			, SPELL3_CASTS
			, SPELL4_CASTS
			, SUMMONER1_CASTS
			, SUMMONER1_ID
			, SUMMONER2_CASTS
			, SUMMONER2_ID
			, SUMMONER_ID
			, SUMMONER_LEVEL
			, SUMMONER_NAME
			, TEAM_EARLY_SURRENDERED
			, TEAM_ID
			, TEAM_POSITION
			, TIME_CC_ING_OTHERS
			, TIME_PLAYED
			, TOTAL_DAMAGE_DEALT
			, TOTAL_DAMAGE_DEALT_TO_CHAMPIONS
			, TOTAL_DAMAGE_SHIELDED_ON_TEAMMATES
			, TOTAL_DAMAGE_TAKEN
			, TOTAL_HEAL
			, TOTAL_HEALS_ON_TEAMMATES
			, TOTAL_MINIONS_KILLED
			, TOTAL_TIME_CC_DEALT
			, TOTAL_TIME_SPENT_DEAD
			, TOTAL_UNITS_HEALED
			, TRIPLE_KILLS
			, TRUE_DAMAGE_DEALT
			, TRUE_DAMAGE_DEALT_TO_CHAMPIONS
			, TRUE_DAMAGE_TAKEN
			, TURRET_KILLS
			, TURRET_TAKEDOWNS
			, TURRETS_LOST
			, UNREAL_KILLS
			, VISION_SCORE
			, VISION_WARDS_BOUGHT_IN_GAME
			, WARDS_KILLED
			, WARDS_PLACED
			, WIN
			, PERK_PRIMARY_STYLE
			, PERK_SUB_STYLE
			, STAT_PERK_DEFENSE
			, STAT_PERK_FLEX
			, STAT_PERK_OFFENSE
		) VALUES (
			#{matchId}
			, #{gameId}
			, #{assists}
			, #{baronKills}
			, #{bountyLevel}
			, #{champExperience}
			, #{champLevel}
			, #{championId}
			, #{championName}
			, #{championTransform}
			, #{consumablesPurchased}
			, #{damageDealtToBuildings}
			, #{damageDealtToObjectives}
			, #{damageDealtToTurrets}
			, #{damageSelfMitigated}
			, #{deaths}
			, #{detectorWardsPlaced}
			, #{doubleKills}
			, #{dragonKills}
			, #{eligibleForProgression}
			, #{firstBloodAssist}
			, #{firstBloodKill}
			, #{firstTowerAssist}
			, #{firstTowerKill}
			, #{gameEndedInEarlySurrender}
			, #{gameEndedInSurrender}
			, #{goldEarned}
			, #{goldSpent}
			, #{individualPosition}
			, #{inhibitorKills}
			, #{inhibitorTakedowns}
			, #{inhibitorsLost}
			, #{item0}
			, #{item1}
			, #{item2}
			, #{item3}
			, #{item4}
			, #{item5}
			, #{item6}
			, #{itemsPurchased}
			, #{killingSprees}
			, #{kills}
			, #{lane}
			, #{largestCriticalStrike}
			, #{largestKillingSpree}
			, #{largestMultiKill}
			, #{longestTimeSpentLiving}
			, #{magicDamageDealt}
			, #{magicDamageDealtToChampions}
			, #{magicDamageTaken}
			, #{neutralMinionsKilled}
			, #{nexusKills}
			, #{nexusLost}
			, #{nexusTakedowns}
			, #{objectivesStolen}
			, #{objectivesStolenAssists}
			, #{participantId}
			, #{pentaKills}
			, #{physicalDamageDealt}
			, #{physicalDamageDealtToChampions}
			, #{physicalDamageTaken}
			, #{profileIcon}
			, #{puuid}
			, #{quadraKills}
			, #{riotIdName}
			, #{riotIdTagline}
			, #{role}
			, #{sightWardsBoughtInGame}
			, #{spell1Casts}
			, #{spell2Casts}
			, #{spell3Casts}
			, #{spell4Casts}
			, #{summoner1Casts}
			, #{summoner1Id}
			, #{summoner2Casts}
			, #{summoner2Id}
			, #{summonerId}
			, #{summonerLevel}
			, #{summonerName}
			, #{teamEarlySurrendered}
			, #{teamId}
			, #{teamPosition}
			, #{timeCCingOthers}
			, #{timePlayed}
			, #{totalDamageDealt}
			, #{totalDamageDealtToChampions}
			, #{totalDamageShieldedOnTeammates}
			, #{totalDamageTaken}
			, #{totalHeal}
			, #{totalHealsOnTeammates}
			, #{totalMinionsKilled}
			, #{totalTimeCCDealt}
			, #{totalTimeSpentDead}
			, #{totalUnitsHealed}
			, #{tripleKills}
			, #{trueDamageDealt}
			, #{trueDamageDealtToChampions}
			, #{trueDamageTaken}
			, #{turretKills}
			, #{turretTakedowns}
			, #{turretsLost}
			, #{unrealKills}
			, #{visionScore}
			, #{visionWardsBoughtInGame}
			, #{wardsKilled}
			, #{wardsPlaced}
			, #{win}
			, #{perkPrimaryStyle}
			, #{perkSubStyle}
			, #{statPerkDefense}
			, #{statPerkFlex}
			, #{statPerkOffense}
		)
	</insert>


	<insert id="insertMatchPartPerksSelectionV5" parameterType="com.springboot.riot.data.summoner.dto.v5.MatchPartPerksSelectionV5Dto">
		INSERT INTO MATCH_PARTICIPANT_PERK_V5
		(
			MATCH_ID
			, GAME_ID
			, PARTICIPANT_ID
			, DESCRIPTION
			, STYLE
			, PERK_ORDER
			, PERK
			, VAR1
			, VAR2
			, VAR3
		) VALUES (
			#{matchId}
			, #{gameId}
			, #{participantId}
			, #{description}
			, #{style}
			, #{perkOrder}
			, #{perk}
			, #{var1}
			, #{var2}
			, #{var3}
		)
	</insert>

	<insert id="insertMatchPartChallengesV5" parameterType="com.springboot.riot.data.summoner.dto.v5.MatchPartChallengesV5Dto">
		INSERT INTO MATCH_PARTICIPANT_CHALLENGE_V5
		(
			MATCH_ID
			, GAME_ID
			, PARTICIPANT_ID
			, ASSIST_STREAK_COUNT
			, ABILITY_USES
			, ACES_BEFORE15_MINUTES
			, ALLIED_JUNGLE_MONSTER_KILLS
			, BARON_BUFF_GOLD_ADVANTAGE_OVER_THRESHOLD
			, BARON_TAKEDOWNS
			, BLAST_CONE_OPPOSITE_OPPONENT_COUNT
			, BOUNTY_GOLD
			, BUFFS_STOLEN
			, COMPLETE_SUPPORT_QUEST_IN_TIME
			, CONTROL_WARD_TIME_COVERAGE_IN_RIVER_OR_ENEMY_HALF
			, CONTROL_WARDS_PLACED
			, DAMAGE_PER_MINUTE
			, DAMAGE_TAKEN_ON_TEAM_PERCENTAGE
			, DANCED_WITH_RIFT_HERALD
			, DEATHS_BY_ENEMY_CHAMPS
			, DODGE_SKILL_SHOTS_SMALL_WINDOW
			, DOUBLE_ACES
			, DRAGON_TAKEDOWNS
			, EARLIEST_BARON
			, EARLY_LANING_PHASE_GOLD_EXP_ADVANTAGE
			, EFFECTIVE_HEAL_AND_SHIELDING
			, ELDER_DRAGON_KILLS_WITH_OPPOSING_SOUL
			, ELDER_DRAGON_MULTIKILLS
			, ENEMY_CHAMPION_IMMOBILIZATIONS
			, ENEMY_JUNGLE_MONSTER_KILLS
			, EPIC_MONSTER_KILLS_NEAR_ENEMY_JUNGLER
			, EPIC_MONSTER_KILLS_WITHIN30_SECONDS_OF_SPAWN
			, EPIC_MONSTER_STEALS
			, EPIC_MONSTER_STOLEN_WITHOUT_SMITE
			, FIRST_TURRET_KILLED_TIME
			, FLAWLESS_ACES
			, FULL_TEAM_TAKEDOWN
			, GAME_LENGTH
			, GET_TAKEDOWNS_IN_ALL_LANES_EARLY_JUNGLE_AS_LANER
			, GOLD_PER_MINUTE
			, HAD_AFK_TEAMMATE
			, HAD_OPEN_NEXUS
			, IMMOBILIZE_AND_KILL_WITH_ALLY
			, INITIAL_BUFF_COUNT
			, INITIAL_CRAB_COUNT
			, JUNGLE_CS_BEFORE10_MINUTES
			, JUNGLER_TAKEDOWNS_NEAR_DAMAGED_EPIC_MONSTER
			, K_TURRETS_DESTROYED_BEFORE_PLATES_FALL
			, KDA
			, KILL_AFTER_HIDDEN_WITH_ALLY
			, KILL_PARTICIPATION
			, KILLED_CHAMP_TOOK_FULL_TEAM_DAMAGE_SURVIVED
			, KILLS_NEAR_ENEMY_TURRET
			, KILLS_ON_OTHER_LANES_EARLY_JUNGLE_AS_LANER
			, KILLS_ON_RECENTLY_HEALED_BY_ARAM_PACK
			, KILLS_UNDER_OWN_TURRET
			, KILLS_WITH_HELP_FROM_EPIC_MONSTER
			, KNOCK_ENEMY_INTO_TEAM_AND_KILL
			, LAND_SKILL_SHOTS_EARLY_GAME
			, LANE_MINIONS_FIRST10_MINUTES
			, LANING_PHASE_GOLD_EXP_ADVANTAGE
			, LEGENDARY_COUNT
			, LOST_AN_INHIBITOR
			, MAX_CS_ADVANTAGE_ON_LANE_OPPONENT
			, MAX_KILL_DEFICIT
			, MAX_LEVEL_LEAD_LANE_OPPONENT
			, MORE_ENEMY_JUNGLE_THAN_OPPONENT
			, MULTI_KILL_ONE_SPELL
			, MULTI_TURRET_RIFT_HERALD_COUNT
			, MULTIKILLS
			, MULTIKILLS_AFTER_AGGRESSIVE_FLASH
			, MYTHIC_ITEM_USED
			, OUTER_TURRET_EXECUTES_BEFORE10_MINUTES
			, OUTNUMBERED_KILLS
			, OUTNUMBERED_NEXUS_KILL
			, PERFECT_DRAGON_SOULS_TAKEN
			, PERFECT_GAME
			, PICK_KILL_WITH_ALLY
			, PORO_EXPLOSIONS
			, QUICK_CLEANSE
			, QUICK_FIRST_TURRET
			, QUICK_SOLO_KILLS
			, RIFT_HERALD_TAKEDOWNS
			, SAVE_ALLY_FROM_DEATH
			, SCUTTLE_CRAB_KILLS
			, SHORTEST_TIME_TO_ACE_FROM_FIRST_TAKEDOWN
			, SKILLSHOTS_DODGED
			, SKILLSHOTS_HIT
			, SNOWBALLS_HIT
			, SOLO_BARON_KILLS
			, SOLO_KILLS
			, SOLO_TURRETS_LATEGAME
			, STEALTH_WARDS_PLACED
			, SURVIVED_SINGLE_DIGIT_HP_COUNT
			, SURVIVED_THREE_IMMOBILIZES_IN_FIGHT
			, TAKEDOWN_ON_FIRST_TURRET
			, TAKEDOWNS
			, TAKEDOWNS_AFTER_GAINING_LEVEL_ADVANTAGE
			, TAKEDOWNS_BEFORE_JUNGLE_MINION_SPAWN
			, TAKEDOWNS_FIRST_X_MINUTES
			, TAKEDOWNS_IN_ALCOVE
			, TAKEDOWNS_IN_ENEMY_FOUNTAIN
			, TEAM_BARON_KILLS
			, TEAM_DAMAGE_PERCENTAGE
			, TEAM_ELDER_DRAGON_KILLS
			, TEAM_RIFT_HERALD_KILLS
			, THREE_WARDS_ONE_SWEEPER_COUNT
			, TOOK_LARGE_DAMAGE_SURVIVED
			, TURRET_PLATES_TAKEN
			, TURRET_TAKEDOWNS
			, TURRETS_TAKEN_WITH_RIFT_HERALD
			, TWENTY_MINIONS_IN3_SECONDS_COUNT
			, UNSEEN_RECALLS
			, VISION_SCORE_ADVANTAGE_LANE_OPPONENT
			, VISION_SCORE_PER_MINUTE
			, WARD_TAKEDOWNS
			, WARD_TAKEDOWNS_BEFORE20_M
			, WARDS_GUARDED
		) VALUES (
			#{matchId}
			, #{gameId}
			, #{participantId}
			, #{assistStreakCount}
			, #{abilityUses}
			, #{acesBefore15Minutes}
			, #{alliedJungleMonsterKills}
			, #{baronBuffGoldAdvantageOverThreshold}
			, #{baronTakedowns}
			, #{blastConeOppositeOpponentCount}
			, #{bountyGold}
			, #{buffsStolen}
			, #{completeSupportQuestInTime}
			, #{controlWardTimeCoverageInRiverOrEnemyHalf}
			, #{controlWardsPlaced}
			, #{damagePerMinute}
			, #{damageTakenOnTeamPercentage}
			, #{dancedWithRiftHerald}
			, #{deathsByEnemyChamps}
			, #{dodgeSkillShotsSmallWindow}
			, #{doubleAces}
			, #{dragonTakedowns}
			, #{earliestBaron}
			, #{earlyLaningPhaseGoldExpAdvantage}
			, #{effectiveHealAndShielding}
			, #{elderDragonKillsWithOpposingSoul}
			, #{elderDragonMultikills}
			, #{enemyChampionImmobilizations}
			, #{enemyJungleMonsterKills}
			, #{epicMonsterKillsNearEnemyJungler}
			, #{epicMonsterKillsWithin30SecondsOfSpawn}
			, #{epicMonsterSteals}
			, #{epicMonsterStolenWithoutSmite}
			, #{firstTurretKilledTime}
			, #{flawlessAces}
			, #{fullTeamTakedown}
			, #{gameLength}
			, #{getTakedownsInAllLanesEarlyJungleAsLaner}
			, #{goldPerMinute}
			, #{hadAfkTeammate}
			, #{hadOpenNexus}
			, #{immobilizeAndKillWithAlly}
			, #{initialBuffCount}
			, #{initialCrabCount}
			, #{jungleCsBefore10Minutes}
			, #{junglerTakedownsNearDamagedEpicMonster}
			, #{kTurretsDestroyedBeforePlatesFall}
			, #{kda}
			, #{killAfterHiddenWithAlly}
			, #{killParticipation}
			, #{killedChampTookFullTeamDamageSurvived}
			, #{killsNearEnemyTurret}
			, #{killsOnOtherLanesEarlyJungleAsLaner}
			, #{killsOnRecentlyHealedByAramPack}
			, #{killsUnderOwnTurret}
			, #{killsWithHelpFromEpicMonster}
			, #{knockEnemyIntoTeamAndKill}
			, #{landSkillShotsEarlyGame}
			, #{laneMinionsFirst10Minutes}
			, #{laningPhaseGoldExpAdvantage}
			, #{legendaryCount}
			, #{lostAnInhibitor}
			, #{maxCsAdvantageOnLaneOpponent}
			, #{maxKillDeficit}
			, #{maxLevelLeadLaneOpponent}
			, #{moreEnemyJungleThanOpponent}
			, #{multiKillOneSpell}
			, #{multiTurretRiftHeraldCount}
			, #{multikills}
			, #{multikillsAfterAggressiveFlash}
			, #{mythicItemUsed}
			, #{outerTurretExecutesBefore10Minutes}
			, #{outnumberedKills}
			, #{outnumberedNexusKill}
			, #{perfectDragonSoulsTaken}
			, #{perfectGame}
			, #{pickKillWithAlly}
			, #{poroExplosions}
			, #{quickCleanse}
			, #{quickFirstTurret}
			, #{quickSoloKills}
			, #{riftHeraldTakedowns}
			, #{saveAllyFromDeath}
			, #{scuttleCrabKills}
			, #{shortestTimeToAceFromFirstTakedown}
			, #{skillshotsDodged}
			, #{skillshotsHit}
			, #{snowballsHit}
			, #{soloBaronKills}
			, #{soloKills}
			, #{soloTurretsLategame}
			, #{stealthWardsPlaced}
			, #{survivedSingleDigitHpCount}
			, #{survivedThreeImmobilizesInFight}
			, #{takedownOnFirstTurret}
			, #{takedowns}
			, #{takedownsAfterGainingLevelAdvantage}
			, #{takedownsBeforeJungleMinionSpawn}
			, #{takedownsFirstXMinutes}
			, #{takedownsInAlcove}
			, #{takedownsInEnemyFountain}
			, #{teamBaronKills}
			, #{teamDamagePercentage}
			, #{teamElderDragonKills}
			, #{teamRiftHeraldKills}
			, #{threeWardsOneSweeperCount}
			, #{tookLargeDamageSurvived}
			, #{turretPlatesTaken}
			, #{turretTakedowns}
			, #{turretsTakenWithRiftHerald}
			, #{twentyMinionsIn3SecondsCount}
			, #{unseenRecalls}
			, #{visionScoreAdvantageLaneOpponent}
			, #{visionScorePerMinute}
			, #{wardTakedowns}
			, #{wardTakedownsBefore20M}
			, #{wardsGuarded}
		)
	</insert>

	<insert id="insertMatchInfoTeamV5" parameterType="com.springboot.riot.data.summoner.dto.v5.MatchInfoTeamV5Dto">
		INSERT INTO MATCH_TEAM_V5
		(
			MATCH_ID
			, GAME_ID
			, TEAM_ID
			, WIN
		) VALUES (
			#{matchId}
			, #{gameId}
			, #{teamId}
			, #{win}
		)
	</insert>


	<insert id="insertMatchInfoTeamBansV5" parameterType="com.springboot.riot.data.summoner.dto.v5.MatchInfoTeamBansV5Dto">
		INSERT INTO MATCH_TEAM_BAN_V5
		(
			MATCH_ID
			, GAME_ID
			, TEAM_ID
			, CHAMPION_ID
			, PICK_TURN
		) VALUES (
			#{matchId}
			, #{gameId}
			, #{teamId}
			, #{championId}
			, #{pickTurn}
		)
	</insert>

	<insert id="insertMatchInfoTeamObjectivesV5" parameterType="com.springboot.riot.data.summoner.dto.v5.MatchInfoTeamObjectivesV5Dto">
		INSERT INTO MATCH_TEAM_OBJECTIVE_V5
		(
			MATCH_ID
			, GAME_ID
			, TEAM_ID
			, OBJECTIVE
			, FIRST_KILL
			, KILLS
		) VALUES (
			#{matchId}
			, #{gameId}
			, #{teamId}
			, #{objective}
			, #{first}
			, #{kills}
		)
	</insert>


	<insert id="insertMatchTimePartFrameV5" parameterType="com.springboot.riot.data.summoner.dto.v5.MatchTimeFramePartV5Dto">
		INSERT INTO MATCH_TIMELINE_PARTICIPANT_V5
		(
		MATCH_ID
		, GAME_ID
		, PARENT_TIMESTAMP
		, FRAME_ID
		, CURRENT_GOLD
		, GOLD_PER_SECOND
		, JUNGLE_MINIONS_KILLED
		, LEVEL
		, MINIONS_KILLED
		, PARTICIPANT_ID
		, TIME_ENEMY_SPENT_CONTROLLED
		, TOTAL_GOLD
		, XP
		, X
		, Y
		) VALUES (
		#{matchId}
		, #{gameId}
		, #{parentTimestamp}
		, #{frameId}
		, #{currentGold}
		, #{goldPerSecond}
		, #{jungleMinionsKilled}
		, #{level}
		, #{minionsKilled}
		, #{participantId}
		, #{timeEnemySpentControlled}
		, #{totalGold}
		, #{xp}
		, #{x}
		, #{y}
		)
	</insert>

	<insert id="insertMatchTimeEventSkillV5" parameterType="com.springboot.riot.data.summoner.dto.v5.MatchTimeFrameEventV5Dto">
		INSERT INTO MATCH_TIMELINE_EVENT_SKILL_V5
		(
		MATCH_ID
		, GAME_ID
		, PARENT_TIMESTAMP
		, TIMESTAMP
		, E_TYPE
		, PARTICIPANT_ID
		, SKILL_SLOT
		, LEVEL_UP_TYPE
		) VALUES (
		#{matchId}
		, #{gameId}
		, #{parentTimestamp}
		, #{timestamp}
		, #{type}
		, #{participantId}
		, #{skillSlot}
		, #{levelUpType}
		)
	</insert>

	<insert id="insertMatchTimeEventItemV5" parameterType="com.springboot.riot.data.summoner.dto.v5.MatchTimeFrameEventV5Dto">
		INSERT INTO MATCH_TIMELINE_EVENT_ITEM_V5
		(
		MATCH_ID
		, GAME_ID
		, PARENT_TIMESTAMP
		, TIMESTAMP
		, E_TYPE
		, PARTICIPANT_ID
		, ITEM_ID
		, AFTER_ID
		, BEFORE_ID
		, GOLD_GAIN
		) VALUES (
		#{matchId}
		, #{gameId}
		, #{parentTimestamp}
		, #{timestamp}
		, #{type}
		, #{participantId}
		, #{itemId}
		, #{afterId}
		, #{beforeId}
		, #{goldGain}
		)
	</insert>

	<insert id="insertMatchTimePartFrameChampStatV5" parameterType="com.springboot.riot.data.summoner.dto.v5.MatchTimeFramePartChampionV5Dto">
		INSERT INTO MATCH_TIMELINE_PARTICIPANT_CHAMPION_STATS_V5
		(
		MATCH_ID
		, GAME_ID
		, PARENT_TIMESTAMP
		, FRAME_ID
		, ABILITY_HASTE
		, ABILITY_POWER
		, ARMOR
		, ARMOR_PEN
		, ARMOR_PEN_PERCENT
		, ATTACK_DAMAGE
		, ATTACK_SPEED
		, BONUS_ARMOR_PEN_PERCENT
		, BONUS_MAGIC_PEN_PERCENT
		, CC_REDUCTION
		, COOLDOWN_REDUCTION
		, HEALTH
		, HEALTH_MAX
		, HEALTH_REGEN
		, LIFESTEAL
		, MAGIC_PEN
		, MAGIC_PEN_PERCENT
		, MAGIC_RESIST
		, MOVEMENT_SPEED
		, OMNIVAMP
		, PHYSICAL_VAMP
		, POWER
		, POWER_MAX
		, POWER_REGEN
		, SPELL_VAMP
		) VALUES (
		#{matchId}
		, #{gameId}
		, #{parentTimestamp}
		, #{frameId}
		, #{abilityHaste}
		, #{abilityPower}
		, #{armor}
		, #{armorPen}
		, #{armorPenPercent}
		, #{attackDamage}
		, #{attackSpeed}
		, #{bonusArmorPenPercent}
		, #{bonusMagicPenPercent}
		, #{ccReduction}
		, #{cooldownReduction}
		, #{health}
		, #{healthMax}
		, #{healthRegen}
		, #{lifesteal}
		, #{magicPen}
		, #{magicPenPercent}
		, #{magicResist}
		, #{movementSpeed}
		, #{omnivamp}
		, #{physicalVamp}
		, #{power}
		, #{powerMax}
		, #{powerRegen}
		, #{spellVamp}
		)
	</insert>

	<insert id="insertMatchTimePartFrameDamageStatV5" parameterType="com.springboot.riot.data.summoner.dto.v5.MatchTimeFramePartDamageV5Dto">
		INSERT INTO MATCH_TIMELINE_PARTICIPANT_DAMAGE_STATS_V5
		(
		MATCH_ID
		, GAME_ID
		, PARENT_TIMESTAMP
		, FRAME_ID
		, MAGIC_DAMAGE_DONE
		, MAGIC_DAMAGE_DONE_TO_CHAMPIONS
		, MAGIC_DAMAGE_TAKEN
		, PHYSICAL_DAMAGE_DONE
		, PHYSICAL_DAMAGE_DONE_TO_CHAMPIONS
		, PHYSICAL_DAMAGE_TAKEN
		, TOTAL_DAMAGE_DONE
		, TOTAL_DAMAGE_DONE_TO_CHAMPIONS
		, TOTAL_DAMAGE_TAKEN
		, TRUE_DAMAGE_DONE
		, TRUE_DAMAGE_DONE_TO_CHAMPIONS
		, TRUE_DAMAGE_TAKEN
		) VALUES (
		#{matchId}
		, #{gameId}
		, #{parentTimestamp}
		, #{frameId}
		, #{magicDamageDone}
		, #{magicDamageDoneToChampions}
		, #{magicDamageTaken}
		, #{physicalDamageDone}
		, #{physicalDamageDoneToChampions}
		, #{physicalDamageTaken}
		, #{totalDamageDone}
		, #{totalDamageDoneToChampions}
		, #{totalDamageTaken}
		, #{trueDamageDone}
		, #{trueDamageDoneToChampions}
		, #{trueDamageTaken}
		)
	</insert>

</mapper>